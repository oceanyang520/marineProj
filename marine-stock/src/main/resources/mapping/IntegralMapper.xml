<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.luvsea.stock.dao.IntegralMapper">
  <resultMap id="BaseResultMap" type="com.luvsea.stock.entity.Integral">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="openid" jdbcType="VARCHAR" property="openid" />
    <result column="reg_number" jdbcType="VARCHAR" property="regNumber" />
    <result column="integral" jdbcType="INTEGER" property="integral" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="invalid" jdbcType="BIT" property="invalid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, openid, reg_number, integral, create_time, update_time, status, invalid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_stock_integral
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_stock_integral
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.luvsea.stock.entity.Integral">
    insert into t_stock_integral (id, openid, reg_number, 
      integral, create_time, update_time, 
      status, invalid)
    values (#{id,jdbcType=BIGINT}, #{openid,jdbcType=VARCHAR}, #{regNumber,jdbcType=VARCHAR}, 
      #{integral,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=SMALLINT}, #{invalid,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.luvsea.stock.entity.Integral">
    insert into t_stock_integral
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="openid != null">
        openid,
      </if>
      <if test="regNumber != null">
        reg_number,
      </if>
      <if test="integral != null">
        integral,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="invalid != null">
        invalid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="regNumber != null">
        #{regNumber,jdbcType=VARCHAR},
      </if>
      <if test="integral != null">
        #{integral,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="invalid != null">
        #{invalid,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.luvsea.stock.entity.Integral">
    update t_stock_integral
    <set>
      <if test="openid != null">
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="regNumber != null">
        reg_number = #{regNumber,jdbcType=VARCHAR},
      </if>
      <if test="integral != null">
        integral = #{integral,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="invalid != null">
        invalid = #{invalid,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.luvsea.stock.entity.Integral">
    update t_stock_integral
    set openid = #{openid,jdbcType=VARCHAR},
      reg_number = #{regNumber,jdbcType=VARCHAR},
      integral = #{integral,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=SMALLINT},
      invalid = #{invalid,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.luvsea.stock.entity.Integral">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="openid" jdbcType="VARCHAR" property="openid" />
    <result column="reg_number" jdbcType="VARCHAR" property="regNumber" />
    <result column="integral" jdbcType="INTEGER" property="integral" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="invalid" jdbcType="BIT" property="invalid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, openid, reg_number, integral, create_time, update_time, status, invalid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_stock_integral
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_stock_integral
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.luvsea.stock.entity.Integral">
    insert into t_stock_integral (id, openid, reg_number, 
      integral, create_time, update_time, 
      status, invalid)
    values (#{id,jdbcType=BIGINT}, #{openid,jdbcType=VARCHAR}, #{regNumber,jdbcType=VARCHAR}, 
      #{integral,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=SMALLINT}, #{invalid,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.luvsea.stock.entity.Integral">
    insert into t_stock_integral
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="openid != null">
        openid,
      </if>
      <if test="regNumber != null">
        reg_number,
      </if>
      <if test="integral != null">
        integral,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="invalid != null">
        invalid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="regNumber != null">
        #{regNumber,jdbcType=VARCHAR},
      </if>
      <if test="integral != null">
        #{integral,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="invalid != null">
        #{invalid,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.luvsea.stock.entity.Integral">
    update t_stock_integral
    <set>
      <if test="openid != null">
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="regNumber != null">
        reg_number = #{regNumber,jdbcType=VARCHAR},
      </if>
      <if test="integral != null">
        integral = #{integral,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="invalid != null">
        invalid = #{invalid,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.luvsea.stock.entity.Integral">
    update t_stock_integral
    set openid = #{openid,jdbcType=VARCHAR},
      reg_number = #{regNumber,jdbcType=VARCHAR},
      integral = #{integral,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=SMALLINT},
      invalid = #{invalid,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.luvsea.stock.entity.Integral">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="openid" jdbcType="VARCHAR" property="openid" />
    <result column="reg_number" jdbcType="VARCHAR" property="regNumber" />
    <result column="integral" jdbcType="INTEGER" property="integral" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="invalid" jdbcType="BIT" property="invalid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, openid, reg_number, integral, create_time, update_time, status, invalid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_stock_integral
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_stock_integral
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.luvsea.stock.entity.Integral">
    insert into t_stock_integral (id, openid, reg_number, 
      integral, create_time, update_time, 
      status, invalid)
    values (#{id,jdbcType=BIGINT}, #{openid,jdbcType=VARCHAR}, #{regNumber,jdbcType=VARCHAR}, 
      #{integral,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=SMALLINT}, #{invalid,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.luvsea.stock.entity.Integral">
    insert into t_stock_integral
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="openid != null">
        openid,
      </if>
      <if test="regNumber != null">
        reg_number,
      </if>
      <if test="integral != null">
        integral,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="invalid != null">
        invalid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="regNumber != null">
        #{regNumber,jdbcType=VARCHAR},
      </if>
      <if test="integral != null">
        #{integral,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="invalid != null">
        #{invalid,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.luvsea.stock.entity.Integral">
    update t_stock_integral
    <set>
      <if test="openid != null">
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="regNumber != null">
        reg_number = #{regNumber,jdbcType=VARCHAR},
      </if>
      <if test="integral != null">
        integral = #{integral,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="invalid != null">
        invalid = #{invalid,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.luvsea.stock.entity.Integral">
    update t_stock_integral
    set openid = #{openid,jdbcType=VARCHAR},
      reg_number = #{regNumber,jdbcType=VARCHAR},
      integral = #{integral,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=SMALLINT},
      invalid = #{invalid,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.luvsea.stock.entity.Integral">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="openid" jdbcType="VARCHAR" property="openid" />
    <result column="reg_number" jdbcType="VARCHAR" property="regNumber" />
    <result column="integral" jdbcType="INTEGER" property="integral" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="invalid" jdbcType="BIT" property="invalid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, openid, reg_number, integral, create_time, update_time, status, invalid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_stock_integral
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_stock_integral
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.luvsea.stock.entity.Integral">
    insert into t_stock_integral (id, openid, reg_number, 
      integral, create_time, update_time, 
      status, invalid)
    values (#{id,jdbcType=BIGINT}, #{openid,jdbcType=VARCHAR}, #{regNumber,jdbcType=VARCHAR}, 
      #{integral,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=SMALLINT}, #{invalid,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.luvsea.stock.entity.Integral">
    insert into t_stock_integral
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="openid != null">
        openid,
      </if>
      <if test="regNumber != null">
        reg_number,
      </if>
      <if test="integral != null">
        integral,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="invalid != null">
        invalid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="regNumber != null">
        #{regNumber,jdbcType=VARCHAR},
      </if>
      <if test="integral != null">
        #{integral,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="invalid != null">
        #{invalid,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.luvsea.stock.entity.Integral">
    update t_stock_integral
    <set>
      <if test="openid != null">
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="regNumber != null">
        reg_number = #{regNumber,jdbcType=VARCHAR},
      </if>
      <if test="integral != null">
        integral = #{integral,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="invalid != null">
        invalid = #{invalid,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.luvsea.stock.entity.Integral">
    update t_stock_integral
    set openid = #{openid,jdbcType=VARCHAR},
      reg_number = #{regNumber,jdbcType=VARCHAR},
      integral = #{integral,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=SMALLINT},
      invalid = #{invalid,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.luvsea.stock.entity.Integral">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="openid" jdbcType="VARCHAR" property="openid" />
    <result column="reg_number" jdbcType="VARCHAR" property="regNumber" />
    <result column="integral" jdbcType="INTEGER" property="integral" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="invalid" jdbcType="BIT" property="invalid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, openid, reg_number, integral, create_time, update_time, status, invalid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_stock_integral
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_stock_integral
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.luvsea.stock.entity.Integral">
    insert into t_stock_integral (id, openid, reg_number, 
      integral, create_time, update_time, 
      status, invalid)
    values (#{id,jdbcType=BIGINT}, #{openid,jdbcType=VARCHAR}, #{regNumber,jdbcType=VARCHAR}, 
      #{integral,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=SMALLINT}, #{invalid,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.luvsea.stock.entity.Integral">
    insert into t_stock_integral
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="openid != null">
        openid,
      </if>
      <if test="regNumber != null">
        reg_number,
      </if>
      <if test="integral != null">
        integral,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="invalid != null">
        invalid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="regNumber != null">
        #{regNumber,jdbcType=VARCHAR},
      </if>
      <if test="integral != null">
        #{integral,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="invalid != null">
        #{invalid,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.luvsea.stock.entity.Integral">
    update t_stock_integral
    <set>
      <if test="openid != null">
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="regNumber != null">
        reg_number = #{regNumber,jdbcType=VARCHAR},
      </if>
      <if test="integral != null">
        integral = #{integral,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="invalid != null">
        invalid = #{invalid,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.luvsea.stock.entity.Integral">
    update t_stock_integral
    set openid = #{openid,jdbcType=VARCHAR},
      reg_number = #{regNumber,jdbcType=VARCHAR},
      integral = #{integral,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=SMALLINT},
      invalid = #{invalid,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.luvsea.stock.entity.Integral">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="openid" jdbcType="VARCHAR" property="openid" />
    <result column="reg_number" jdbcType="VARCHAR" property="regNumber" />
    <result column="integral" jdbcType="INTEGER" property="integral" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="invalid" jdbcType="BIT" property="invalid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, openid, reg_number, integral, create_time, update_time, status, invalid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_stock_integral
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_stock_integral
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.luvsea.stock.entity.Integral">
    insert into t_stock_integral (id, openid, reg_number, 
      integral, create_time, update_time, 
      status, invalid)
    values (#{id,jdbcType=BIGINT}, #{openid,jdbcType=VARCHAR}, #{regNumber,jdbcType=VARCHAR}, 
      #{integral,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=SMALLINT}, #{invalid,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.luvsea.stock.entity.Integral">
    insert into t_stock_integral
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="openid != null">
        openid,
      </if>
      <if test="regNumber != null">
        reg_number,
      </if>
      <if test="integral != null">
        integral,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="invalid != null">
        invalid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="regNumber != null">
        #{regNumber,jdbcType=VARCHAR},
      </if>
      <if test="integral != null">
        #{integral,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="invalid != null">
        #{invalid,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.luvsea.stock.entity.Integral">
    update t_stock_integral
    <set>
      <if test="openid != null">
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="regNumber != null">
        reg_number = #{regNumber,jdbcType=VARCHAR},
      </if>
      <if test="integral != null">
        integral = #{integral,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="invalid != null">
        invalid = #{invalid,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.luvsea.stock.entity.Integral">
    update t_stock_integral
    set openid = #{openid,jdbcType=VARCHAR},
      reg_number = #{regNumber,jdbcType=VARCHAR},
      integral = #{integral,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=SMALLINT},
      invalid = #{invalid,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>